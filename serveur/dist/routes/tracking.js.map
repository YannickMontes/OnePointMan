{"version":3,"sources":["../../routes/tracking.js"],"names":["express","require","router","Router","db","squelb","squel","useFlavour","sender","get","req","res","next","post","toUpdate","iduser","body","idgroup","tracking","deleteRows","delete","from","where","parseInt","toString","query","then","console","log","catch","err","update","table","set","none","sendResponse","SUCCESS_STATUS","status","message","BAD_REQUEST","e","toDelete","deleting","module","exports"],"mappings":"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","file":"tracking.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../connection');\r\nconst squelb = require('squel');\r\nconst squel = squelb.useFlavour('postgres');\r\n\r\nconst sender = require('../sender');\r\n\r\n\r\nrouter.get('/', function(req, res, next) {\r\n\r\n});\r\n\r\nrouter.post('/settracking', function(req,res){\r\n    let toUpdate = {\r\n        iduser: req.body.iduser,\r\n        idgroup: req.body.idgroup,\r\n        tracking: req.body.tracking\r\n    };\r\n\r\n    if(toUpdate.tracking){\r\n        //on supprime tous les tuples de iduser,idgroup\r\n\r\n        let deleteRows = squel.delete()\r\n            .from('public.\"TRACK_POS\"')\r\n            .where('iduser = ?', parseInt(toUpdate.iduser))\r\n            .where('idgroup = ?', parseInt(toUpdate.idgroup))\r\n            .toString();\r\n\r\n        db.query(deleteRows)\r\n            .then(()=>{\r\n                console.log('Deleted rows from \"TRACK_POS\" successfully');\r\n            })\r\n            .catch(err => {\r\n                console.log('Failed at deleting rows ' + err);\r\n            })\r\n    }\r\n\r\n    let query = squel.update()\r\n        .table('public.\"USER_GROUP\"')\r\n        .set('istracking', toUpdate.tracking)\r\n        .where('iduser = ?', toUpdate.iduser)\r\n        .where('idgroup = ?', toUpdate.idgroup)\r\n        .toString();\r\n    console.log(query);\r\n    db.none(query)\r\n        .then(()=>{\r\n            sender.sendResponse(sender.SUCCESS_STATUS, {status:'success',message:'istracking updated successfully'}, res)\r\n        })\r\n        .catch(e => {\r\n            sender.sendResponse(sender.BAD_REQUEST, {status:'fail', message:'Error while updating tracking state'}, res);\r\n            console.log(e);\r\n        })\r\n\r\n});\r\n\r\nrouter.post('/deletetracking', function(req,res){\r\n   let toDelete = {\r\n       iduser: req.body.iduser,\r\n       idgroup: req.body.idgroup\r\n   }\r\n\r\n   let deleting=squel.delete()\r\n       .from('public.\"TRACK_POS\"')\r\n       .where('iduser = ?', toDelete.iduser)\r\n       .where('idgroup = ?', toDelete.idgroup)\r\n       .toString();\r\n   db.query(deleting)\r\n       .then(()=>{\r\n           sender.sendResponse(sender.SUCCESS_STATUS, {status:'success',message:'Tracking deleted successfully'}, res)\r\n\r\n       })\r\n       .catch(e => {\r\n           sender.sendResponse(sender.BAD_REQUEST, {status:'fail', message:'Error while updating tracking state'}, res);\r\n           console.log(e);\r\n       })\r\n\r\n});\r\n\r\n\r\nmodule.exports = router;\r\n"]}